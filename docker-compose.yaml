version: '3'

services:
  proxy:
    image: traefik:v2.0
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      landrs:
        aliases:
          - schema.landrs.org

  database:
    image: postgres:10-alpine
    env_file: secrets.env
    environment:
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_DATABASE=postgres
    volumes:
      - database_vol:/var/lib/postgresql/data
      - database_run_vol:/run/postgresql
    networks:
      - landrs

  frontend:
    image: landrs/zazuko
    build:
      context: ../zazuko
      dockerfile: Dockerfile
    env_file: secrets.env
    environment: 
        - CUSTOMER_NAME=landrs
        - POSTGRESQL_USER=postgres
        - POSTGRESQL_DATABASE=postgres
        - POSTGRESQL_HOST=database
        - EDITOR_HOST=schema.landrs.org
        - EDITOR_PROTOCOL=http
        - OAUTH_HOST=https://github.com/login/oauth
        - ONTOLOGY_RAW_URL=https://raw.githubusercontent.com/Omegaice/o/example-com/ontology.nt
        - STRUCTURE_RAW_URL=https://raw.githubusercontent.com/Omegaice/o/example-com/structure.nt
        - GITHUB_REPO=o
        - GITHUB_REPO_OWNER=Omegaice
        #- GITHUB_REPO_BRANCH=patch-1
        - DEBUG=editor:*
    labels:
      - traefik.http.routers.frontend.rule=Host(`schema.landrs.org`)
      - traefik.http.services.frontend.loadbalancer.server.port=3000
    networks:
      - landrs

  backups:
    image: postgres:10-alpine
    env_file: secrets.env
    environment:
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_DATABASE=postgres
    volumes:
      - ${BACKUPS_ROOT_CRON_JOB_FILE_PATH-./pg_backup_script}:/etc/periodic/daily/pg_backup_script:ro
      - ${BACKUPS_OUTPUT_FOLDER_PATH-./backups}:/backups
      - database_vol:/var/lib/postgresql/data:ro
      - database_run_vol:/run/postgresql:ro
    entrypoint: crond -l 2 -f
    depends_on:
      - database
    networks:
      - landrs

volumes:
  database_vol:
  database_run_vol:

networks:
  landrs:
    driver: bridge
